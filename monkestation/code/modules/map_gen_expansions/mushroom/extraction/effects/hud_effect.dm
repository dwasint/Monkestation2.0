///A display panel that renders a set of icons, this is generated by /obj/machinery/trading_card_button and can be manipulated by the button which generates it.
/obj/effect/bar_hud_display
	name = "display panel bar hud"
	icon = 'icons/obj/toys/tcgmisc_large.dmi'
	icon_state = "display_panel"
	pixel_x = -10
	anchored = TRUE

	///How much "active" gems will appear
	var/active_dots = 1
	///How many "inactive" gems will appear
	var/dot_slots = 1
	///Where the gem bar is placed in relation to the centre of the panel on the Y axis.
	var/bar_offset_z = -11
	///Where the gem bar is placed in relation to the centre of the panel on the X axis, useful for multi-column displays.
	var/bar_offset_w = 0
	///The gap between each gem on the Y axis
	var/individual_dot_offset_y = 5
	///The gap between each gem on the X axis
	var/individual_dot_offset_x
	///The maximum number of rows that can be displayed on the panel.
	var/number_of_rows = 10
	///The maximum number of columns that can be displayed on the panel.
	var/number_of_columns = 1
	///File that both icon states for gems are pulled from
	var/dot_icon = 'monkestation/code/modules/map_gen_expansions/icons/hud_icons.dmi'
	///The icon of an "active" gem.
	var/dot_icon_state
	///The icon of an "inactive" gem.
	var/dot_icon_state_empty
	///The name of what this panel tracks, used in the description
	var/display_title

/obj/effect/bar_hud_display/Initialize(mapload)
	. = ..()
	update_icon(UPDATE_OVERLAYS)

/obj/effect/bar_hud_display/update_overlays()
	. = ..()
	if(!dot_slots)
		return
	active_dots = clamp(active_dots, 0, dot_slots)
	for(var/gem_row in 1 to number_of_rows)
		for(var/gem in 1 to number_of_columns)
			if(dot_slots >= (gem_row - 1) * number_of_columns + gem)
				var/mutable_appearance/gem_overlay = mutable_appearance(dot_icon, dot_icon_state_empty)
				if(active_dots >= (gem_row - 1) * number_of_columns + gem)
					gem_overlay.icon_state = dot_icon_state
				gem_overlay.pixel_z = gem_row * individual_dot_offset_y + bar_offset_z
				gem_overlay.pixel_w = (gem - 1) * individual_dot_offset_x + bar_offset_w
				. += gem_overlay

/obj/effect/bar_hud_display/examine(mob/user)
	. = ..()
	. += span_notice("It is currently showing [active_dots] out of [dot_slots] [display_title].")
